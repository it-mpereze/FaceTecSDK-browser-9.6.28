SampleApp = (function () {
    var latestEnrollmentIdentifier = "";
    var groupName = "";
    var latestProcessor;
    var latestSessionResult = null;
    var latestIDScanResult = null;
    var latestServerResult = null;
    var image_1 = "";
    var image_2 = "";
    var themeResourceDirectory = "../../sample-app-resources/images/themes/";
    // Wait for onload to be complete before attempting to access the Browser SDK.
    window.onload = function () {
        SampleAppUtilities.formatUIForDevice();
        // Set a the directory path for other FaceTec Browser SDK Resources.
        FaceTecSDK.setResourceDirectory("../../core-sdk/FaceTecSDK.js/resources");
        // Set the directory path for required FaceTec Browser SDK images.
        FaceTecSDK.setImagesDirectory("../../core-sdk/FaceTec_images");
        // Set your FaceTec Device SDK Customizations.
        initializeKaralundiTheme();
        // Initialize FaceTec Browser SDK and configure the UI features.
        Config.initializeFromAutogeneratedConfig(FaceTecSDK, function (initializedSuccessfully) {
            offLoader();
            if (initializedSuccessfully) {
                SampleAppUtilities.enableControlButtons();
                SampleAppUtilities.setVocalGuidanceSoundFiles();
                // Set the strings to be used for group names, field names, and placeholder texts for the FaceTec ID Scan User OCR Confirmation Screen.
                SampleAppUtilities.setOCRLocalization();
                AdditionalScreens.setServerUpgradeStyling(document.getElementById("controls"), exitAdditionalScreen);
            }
            SampleAppUtilities.displayStatus(FaceTecSDK.getFriendlyDescriptionForFaceTecSDKStatus(FaceTecSDK.getStatus()));
        });
    };
    // Initiate a 3D Liveness Check.
    function onLivenessCheckPressed() {
        SampleAppUtilities.fadeOutMainUIAndPrepareForSession();

        // Get a Session Token from the FaceTec SDK, then start the 3D Liveness Check.
        getSessionToken(function (sessionToken) {
            latestProcessor = new LivenessCheckProcessor(sessionToken, SampleApp);
        });
    }
    // Initiate a 3D Liveness Check, then storing the 3D FaceMap in the Database, also known as "Enrollment".  A random enrollmentIdentifier is generated each time to guarantee uniqueness.
    function onEnrollUserPressed() {
        var user = document.getElementById("external-database-refid").value.trim();
        if(user == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }

        SampleAppUtilities.fadeOutMainUIAndPrepareForSession();
        // Get a Session Token from the FaceTec SDK, then start the Enrollment.
        getSessionToken(function (sessionToken) {
            latestEnrollmentIdentifier = user;
            latestProcessor = new EnrollmentProcessor(sessionToken, SampleApp);
        });
    }

    // Perform 3D to 3D Authentication against the Enrollment previously performed.
    function onAuthenticate3d3dUserPressed() {
        var user = document.getElementById("external-database-refid").value.trim();
        if(user == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }

        SampleAppUtilities.fadeOutMainUIAndPrepareForSession();
        // Get a Session Token from the FaceTec SDK, then start the 3D to 3D Matching.
        getSessionToken(function (sessionToken) {
            latestEnrollmentIdentifier = user;
            latestProcessor = new AuthenticateProcessor(sessionToken, SampleApp);
        });
    }

    function onAuthenticate3d2dUserPressed() {
        var user = document.getElementById("external-database-refid").value.trim();
        if(user == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }

        if(image_1 == ""){
            alert("Por favor carga la imagen 2D 1");
            return;
        }
        onLoader();
        latestEnrollmentIdentifier = user;
        latestProcessor = new Authenticate3d2dProcessor(SampleApp); 
    }

    function onAuthenticate2d2dUserPressed() {
        if(image_1 == ""){
            alert("Por favor carga la imagen 2D 1");
            return;
        }

        if(image_2 == ""){
            alert("Por favor carga la imagen 2D 2");
            return;
        }
        onLoader();
        latestProcessor = new Authenticate2d2dProcessor(SampleApp); 
    }

    // Perform a 3D Liveness Check, then an ID Scan, then Match the 3D FaceMap to the ID Scan.
    function onPhotoIDMatchPressed() {
        var user = document.getElementById("external-database-refid").value.trim();
        if(user == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }

        SampleAppUtilities.fadeOutMainUIAndPrepareForSession();
        // Get a Session Token from the FaceTec SDK, then start the 3D Liveness Check.  On Success, ID Scanning will start automatically.
        getSessionToken(function (sessionToken) {
            latestEnrollmentIdentifier = user;
            latestProcessor = new PhotoIDMatchProcessor(sessionToken, SampleApp);
        });
    }

    // Perform Photo ID Scan, generating a username each time to guarantee uniqueness.
    function onPhotoIDScanPressed() {
        SampleAppUtilities.fadeOutMainUIAndPrepareForSession();
        // Get a Session Token from the FaceTec SDK, then start the 3D Liveness Check.  On Success, ID Scanning will start automatically.
        getSessionToken(function (sessionToken) {
            latestProcessor = new PhotoIDScanProcessor(sessionToken, SampleApp);
        });
    }

    function onDeleteEnrollmentUserPressed() {
        var user = document.getElementById("external-database-refid").value.trim();
        if(user == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }
        onLoader();
        latestEnrollmentIdentifier = user;

    }

    function onSearchUserPressed() {
        var user = document.getElementById("external-database-refid").value.trim();
        if(user == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }
        latestEnrollmentIdentifier = user;
        var group = document.getElementById("group-name").value.trim();
        if(group == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }
        groupName = group;
        onLoader();
        latestProcessor = new SearchProcessor(SampleApp); 
    }

    function onGetUserPressed() {
        var user = document.getElementById("external-database-refid").value.trim();
        if(user == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }
        latestEnrollmentIdentifier = user;
        var group = document.getElementById("group-name").value.trim();
        if(group == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }
        groupName = group;
        onLoader();
        latestProcessor = new GetUserProcessor(SampleApp); 
    }

    function onEnroll1NUserPressed() {
        var user = document.getElementById("external-database-refid").value.trim();
        if(user == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }
        latestEnrollmentIdentifier = user;
        var group = document.getElementById("group-name").value.trim();
        if(group == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }
        groupName = group;
        onLoader();
        latestProcessor = new EnrollUserProcessor(SampleApp); 
    }

    function onDeleteUserPressed() {
        var user = document.getElementById("external-database-refid").value.trim();
        if(user == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }
        latestEnrollmentIdentifier = user;
        var group = document.getElementById("group-name").value.trim();
        if(group == ""){
            alert("Por favor ingresa un id de usuario");
            return;
        }
        groupName = group;
        onLoader();
        latestProcessor = new DeleteUserProcessor(SampleApp); 
    }

    // Show the final result with the Session Review Screen.
    var onComplete;
    onComplete = function (sessionResult, idScanResult, latestNetworkResponseStatus) {
        offLoader();
        latestSessionResult = sessionResult;
        latestIDScanResult = idScanResult;
        if (latestProcessor.isSuccess()) {
            // Show successful message to screen
            SampleAppUtilities.displayStatus("Success");
        }
        else {
            // 0 - No se detectó ninguna cancelación.
            // 1 - Cancelación de proceso por exceder el número de intentos con documento no reconocido.
            // 2 - Cancelación de proceso por exceder el número de intentos con documento que no corresponde al usuario.
            // 3 - Cancelación de proceso por exceder el número de intentos con documento modificado.
            if(latestProcessor.getCancellationForIntents() != 0){
                SampleAppUtilities.displayStatus("Se excedió el número de intentos.\n Intente nuevamente.");
                SampleAppUtilities.showMainUI();
                return;
            }
            
            if(latestProcessor.getLatestServerResult() !== null){
                console.log(latestProcessor.getLatestServerResult());
                if(latestProcessor.getLatestServerResult().meta.message !== null){
                    alert(latestProcessor.getLatestServerResult().meta.message);
                    SampleAppUtilities.displayStatus(latestProcessor.getLatestServerResult().meta.message);
                    SampleAppUtilities.showMainUI();
                    return;
                }
            }
            // Show early exit message to screen.  If this occurs, please check logs.
            SampleAppUtilities.displayStatus("Session exited early, see logs for more details. Latest getStatus(): " + FaceTecSDK.getStatus());
            // Check for server offline
            if (isNetworkResponseServerIsOffline(latestNetworkResponseStatus) === true) {
                showAdditionalScreensServerIsDown();
                return;
            }
        }
        SampleAppUtilities.showMainUI();
    };
    // Check for server down status
    function isNetworkResponseServerIsOffline(networkResponseStatus) {
        return (networkResponseStatus >= 500);
    }
    // Set a new customization for FaceTec Browser SDK.
    function onDesignShowcasePressed() {
        ThemeHelpers.showNewTheme();
    }
    function onVocalGuidanceSettingsButtonPressed() {
        SampleAppUtilities.setVocalGuidanceMode();
    }
    // Display audit trail images captured from user's last FaceTec Browser SDK Session (if available).
    function onViewAuditTrailPressed() {
        SampleAppUtilities.showAuditTrailImages(latestSessionResult, latestIDScanResult);
    }
    // Get the Session Token from the server
    function getSessionToken(sessionTokenCallback) {
        // Only handle session token error once
        var sessionTokenErrorHasBeenHandled = false;
        var XHR = new XMLHttpRequest();
        XHR.open("GET", Config.BaseURL + "/session-token");
        XHR.setRequestHeader("X-Device-Key", Config.DeviceKeyIdentifier);
        XHR.setRequestHeader("X-User-Agent", FaceTecSDK.createFaceTecAPIUserAgentString(""));
        XHR.onreadystatechange = function () {
            if (this.readyState === XMLHttpRequest.DONE) {
                var sessionToken = "";
                try {
                    // Attempt to get the sessionToken from the response object.
                    sessionToken = JSON.parse(this.responseText).sessionToken;
                    // Something went wrong in parsing the response. Return an error.
                    if (typeof sessionToken !== "string") {
                        if (sessionTokenErrorHasBeenHandled === false) {
                            sessionTokenErrorHasBeenHandled = true;
                            if (isNetworkResponseServerIsOffline(XHR.status)) {
                                showAdditionalScreensServerIsDown();
                            }
                            else {
                                onServerSessionTokenError();
                            }
                        }
                        return;
                    }
                }
                catch (_a) {
                    // Something went wrong in parsing the response. Return an error.
                    if (sessionTokenErrorHasBeenHandled === false) {
                        sessionTokenErrorHasBeenHandled = true;
                        if (isNetworkResponseServerIsOffline(XHR.status)) {
                            showAdditionalScreensServerIsDown();
                        }
                        else {
                            onServerSessionTokenError();
                        }
                    }
                    return;
                }
                SampleAppUtilities.hideLoadingSessionToken();
                sessionTokenCallback(sessionToken);
            }
        };
        // Wait 3s, if the request is not completed yet, show the session token loading screen
        window.setTimeout(function () {
            if (XHR.readyState !== XMLHttpRequest.DONE) {
                SampleAppUtilities.showLoadingSessionToken();
            }
        }, 3000);
        XHR.onerror = function () {
            // Something went wrong in the XHR request
            if (sessionTokenErrorHasBeenHandled === false) {
                sessionTokenErrorHasBeenHandled = true;
                if (isNetworkResponseServerIsOffline(XHR.status)) {
                    showAdditionalScreensServerIsDown();
                }
                else {
                    onServerSessionTokenError();
                }
            }
        };
        XHR.send();
    }
    function showAdditionalScreensServerIsDown() {
        AdditionalScreens.showServerUpGradeView();
    }
    function onServerSessionTokenError() {
        SampleAppUtilities.handleErrorGettingServerSessionToken();
    }
    var getLatestEnrollmentIdentifier;
    getLatestEnrollmentIdentifier = function () {
        return latestEnrollmentIdentifier;
    };
    var clearLatestEnrollmentIdentifier;
    clearLatestEnrollmentIdentifier = function () {
        latestEnrollmentIdentifier = "";
    };
    function exitAdditionalScreen() {
        AdditionalScreens.exitAdditionalScreen(SampleAppUtilities.showMainUI);
    }
    var getImage_1;
    getImage_1 = function () {
        return image_1;
    };
    var getImage_2;
    getImage_2 = function () {
        return image_2;
    };
    var getGroupName;
    getGroupName = function () {
        return groupName;
    };
    
    async function onSelectImage1Pressed(file) {
        var image = await toBase64(file[0])
        image_1 = image.split(",")[1]
    }

    async function onSelectImage2Pressed(file) {
        var image = await toBase64(file[0])
        image_2 = image.split(",")[1]
    }

    const toBase64 = file => new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = () => resolve(reader.result);
        reader.onerror = error => reject(error);
    });

    function onLoader(){
        document.getElementById("loader-container").style.display = 'flex';
    }
    function offLoader(){
        document.getElementById("loader-container").style.display = 'none';
    }

    function initializeKaralundiTheme() {
        Config.currentCustomization = getCustomizationForTheme();
        var currentLowLightCustomization = getLowLightCustomizationForTheme();
        var currentDynamicDimmingCustomization = getDynamicDimmingCustomizationForTheme();
        FaceTecSDK.setCustomization(Config.currentCustomization);
        FaceTecSDK.setLowLightCustomization(currentLowLightCustomization);
        FaceTecSDK.setDynamicDimmingCustomization(currentDynamicDimmingCustomization);
    }
    function getCustomizationForTheme() {
        var currentCustomization = new FaceTecSDK.FaceTecCustomization();
        var primaryColor = "#f4aa27"; //Naranja 1
        var secondaryColor = "#eec273"; // Naranja 2
        var backgroundColor = "#fff"; // white
        var font = "Futura,'Trebuchet MS',Arial,sans-serif";
        var activityIndicatorSVG = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        activityIndicatorSVG.setAttribute("viewBox", "0 0 52 52");
        activityIndicatorSVG.classList.add("pseudo-fullscreen-activity-indicator-svg");
        activityIndicatorSVG.innerHTML = "<circle class='path' cx='26' cy='26' r='22'></circle>";
        var successResultAnimationSVG = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        successResultAnimationSVG.setAttribute("viewBox", "0 0 52 52");
        successResultAnimationSVG.classList.add("pseudo-fullscreen-success-svg");
        successResultAnimationSVG.innerHTML = "<circle class='circlePath' cx='26' cy='26' r='22'></circle><path class='checkmarkPath' d='M14.1 27.2l7.1 7.2 16.7-16.8'></path>";
        var unsuccessResultAnimationSVG = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        unsuccessResultAnimationSVG.setAttribute("viewBox", "0 0 52 52");
        unsuccessResultAnimationSVG.classList.add("pseudo-fullscreen-unsuccess-svg");
        unsuccessResultAnimationSVG.innerHTML = "<circle class='circlePath' cx='26' cy='26' r='22'></circle><line class='crossPath1' x1='18' y1='18' x2='34' y2='34'></line><line class='crossPath2' x1='34' y1='18' x2='18' y2='34'></line>";
        var additionalReviewSVG = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        additionalReviewSVG.setAttribute("viewBox", "0 0 122.93 79.21");
        additionalReviewSVG.innerHTML = "<defs><style>.d{fill:#ccc;}.e{stroke:#cbcbcb;stroke-width:4px;}.e,.f{fill:none;stroke-miterlimit:10;}.f{stroke:#ccc;}.d1{stroke-linecap:round;stroke-linejoin:round;}.d1,.e1{fill:none;stroke:#0080ba;stroke-width:5px;}.e1{stroke-miterlimit:10;}</style></defs><g id='a'/><g id='b'><g id='c'><g><rect class='e' x='24.05' y='-19.75' width='74.82' height='118.7' rx='6.7' ry='6.7' transform='translate(100.84 -22.01) rotate(89.79)'/><g><g><rect class='d' x='50.05' y='58.39' width='20.25' height='3.4' rx='.88' ry='.88' transform='translate(-.22 .22) rotate(-.21)'/><rect class='d' x='99.86' y='38.43' width='11.96' height='3.4' rx='.88' ry='.88' transform='translate(-.15 .39) rotate(-.21)'/><rect class='d' x='99.82' y='28.53' width='11.96' height='3.4' rx='.88' ry='.88' transform='translate(-.11 .39) rotate(-.21)'/><rect class='d' x='50.01' y='48.46' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.18 .25) rotate(-.21)'/><rect class='d' x='49.98' y='38.57' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.15 .25) rotate(-.21)'/><rect class='d' x='49.94' y='28.67' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.11 .25) rotate(-.21)'/></g><path class='d' d='M25.13,31.3c-7.76,.03-14.06,6.37-14.02,14.13,.04,7.75,6.35,14.03,14.09,14.02,7.74-.01,14.08-6.29,14.06-14.12-.03-7.78-6.36-14.05-14.12-14.02Zm6.85,25.16c-1.29,.79-2.68,1.34-4.16,1.65-.86,.18-1.73,.27-2.62,.27-2.43,0-4.68-.63-6.77-1.87-.17-.1-.23-.19-.17-.4,.34-1.2,.69-2.41,1.15-3.57,.54-1.37,1.15-2.71,2.03-3.9,.28-.38,.57-.74,.85-1.12,.08-.1,.14-.11,.26-.05,1.72,.84,3.45,.82,5.17,0,.15-.07,.22-.05,.32,.07,1.02,1.31,1.9,2.7,2.54,4.25,.6,1.45,1.08,2.93,1.49,4.43,.04,.14-.01,.18-.11,.24Zm-10.15-10.85c-2.33-2.19-2.4-6.13-.16-8.41,2.15-2.18,5.55-1.97,7.41,.48,.8,1.05,1.22,2.29,1.23,3.63-.03,1.79-.64,3.33-2.02,4.51-1.92,1.63-4.61,1.54-6.46-.2Zm11.24,10.1c-.11-.37-.22-.74-.34-1.11-.32-1.04-.68-2.06-1.1-3.06-.56-1.35-1.28-2.61-2.12-3.81-.21-.3-.46-.57-.7-.84-.09-.1-.07-.14,.02-.23,1.72-1.47,2.54-3.35,2.45-5.59-.1-2.49-1.19-4.47-3.4-5.72-2.35-1.33-5.32-.77-7.18,1.3-2.53,2.82-2.28,7.4,.53,9.84q.3,.26,.05,.57c-.65,.82-1.22,1.69-1.75,2.59-.26,.43-.42,.91-.63,1.37-.65,1.46-1.11,2.97-1.56,4.5-.02,.06-.04,.13-.06,.2-3.65-2.67-6.15-7.83-4.8-13.47,1.36-5.67,6.49-9.79,12.36-9.92,6.04-.13,11.15,3.8,12.79,9.27,1.7,5.68-.66,11.2-4.59,14.1Z'/></g><line class='f' x1='7.74' y1='21.19' x2='115.19' y2='21.37'/><rect class='d' x='7.74' y='10.7' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.05 .1) rotate(-.21)'/></g></g></g><g id='a1'/><g id='b1' transform='translate(0 19.5)'><g id='c1'><g><circle class='e1' cx='25.71' cy='25.71' r='23.21'/><line class='d1' x1='42.42' y1='43.28' x2='52.55' y2='53.41'/><animateTransform attributeName='transform' attributeType='XML' dur='1.5s' type='translate' begin='indefinite' from='0 0' to='64.5 0' calcmode='spline' keysplines='0.42,0,0.58,1' keyTimes='0;1' fill='freeze'></animateTransform></g></g></g>";
        // Initial Loading Animation Customization
        //currentCustomization.initialLoadingAnimationCustomization.customAnimation = activityIndicatorSVG;
        currentCustomization.initialLoadingAnimationCustomization.animationRelativeScale = 1.0;
        currentCustomization.initialLoadingAnimationCustomization.backgroundColor = primaryColor;
        currentCustomization.initialLoadingAnimationCustomization.foregroundColor = backgroundColor;
        currentCustomization.initialLoadingAnimationCustomization.messageTextColor = primaryColor;
        currentCustomization.initialLoadingAnimationCustomization.messageFont = font;
        // Overlay Customization
        currentCustomization.overlayCustomization.backgroundColor = backgroundColor;
        currentCustomization.overlayCustomization.showBrandingImage = true;
        currentCustomization.overlayCustomization.brandingImage = themeResourceDirectory + "karalundi/karalundi_transp.png";
        // Guidance Customization
        currentCustomization.guidanceCustomization.backgroundColors = backgroundColor;
        currentCustomization.guidanceCustomization.foregroundColor = primaryColor;
        currentCustomization.guidanceCustomization.headerFont = font;
        currentCustomization.guidanceCustomization.subtextFont = font;
        currentCustomization.guidanceCustomization.buttonFont = font;
        currentCustomization.guidanceCustomization.buttonTextNormalColor = backgroundColor;
        currentCustomization.guidanceCustomization.buttonBackgroundNormalColor = primaryColor;
        currentCustomization.guidanceCustomization.buttonTextHighlightColor = backgroundColor;
        currentCustomization.guidanceCustomization.buttonBackgroundHighlightColor = secondaryColor;
        currentCustomization.guidanceCustomization.buttonTextDisabledColor = backgroundColor;
        currentCustomization.guidanceCustomization.buttonBackgroundDisabledColor = secondaryColor;
        currentCustomization.guidanceCustomization.buttonBorderColor = "transparent";
        currentCustomization.guidanceCustomization.buttonBorderWidth = "0px";
        currentCustomization.guidanceCustomization.buttonCornerRadius = "20px";
        currentCustomization.guidanceCustomization.readyScreenOvalFillColor = "transparent";
        currentCustomization.guidanceCustomization.readyScreenTextBackgroundColor = backgroundColor;
        currentCustomization.guidanceCustomization.readyScreenTextBackgroundCornerRadius = "5px";
        currentCustomization.guidanceCustomization.retryScreenImageBorderColor = primaryColor;
        currentCustomization.guidanceCustomization.retryScreenImageBorderWidth = "2px";
        currentCustomization.guidanceCustomization.retryScreenImageCornerRadius = "10px";
        currentCustomization.guidanceCustomization.retryScreenOvalStrokeColor = backgroundColor;
        //currentCustomization.guidanceCustomization.retryScreenSlideshowImages = retryScreenSlideshowImages;
        currentCustomization.guidanceCustomization.retryScreenSlideshowInterval = "2000ms";
        currentCustomization.guidanceCustomization.enableRetryScreenSlideshowShuffle = true;
        currentCustomization.guidanceCustomization.cameraPermissionsScreenImage = themeResourceDirectory + "karalundi/camera_shutter_orange.png";
        // ID Scan Customization
        currentCustomization.idScanCustomization.showSelectionScreenDocumentImage = true;
        currentCustomization.idScanCustomization.selectionScreenDocumentImage = themeResourceDirectory + "karalundi/document_off_orange.png";
        currentCustomization.idScanCustomization.showSelectionScreenBrandingImage = false;
        currentCustomization.idScanCustomization.selectionScreenBrandingImage = "";
        currentCustomization.idScanCustomization.selectionScreenBackgroundColors = backgroundColor;
        currentCustomization.idScanCustomization.reviewScreenBackgroundColors = backgroundColor;
        currentCustomization.idScanCustomization.captureScreenForegroundColor = primaryColor;
        currentCustomization.idScanCustomization.reviewScreenForegroundColor = primaryColor;
        currentCustomization.idScanCustomization.selectionScreenForegroundColor = primaryColor;
        currentCustomization.idScanCustomization.headerFont = font;
        currentCustomization.idScanCustomization.subtextFont = font;
        currentCustomization.idScanCustomization.buttonFont = font;
        currentCustomization.idScanCustomization.buttonTextNormalColor = backgroundColor;
        currentCustomization.idScanCustomization.buttonBackgroundNormalColor = primaryColor;
        currentCustomization.idScanCustomization.buttonTextHighlightColor = backgroundColor;
        currentCustomization.idScanCustomization.buttonBackgroundHighlightColor = secondaryColor;
        currentCustomization.idScanCustomization.buttonTextDisabledColor = backgroundColor;
        currentCustomization.idScanCustomization.buttonBackgroundDisabledColor = primaryColor;
        currentCustomization.idScanCustomization.buttonBorderColor = "transparent";
        currentCustomization.idScanCustomization.buttonBorderWidth = "0px";
        currentCustomization.idScanCustomization.buttonCornerRadius = "20px";
        currentCustomization.idScanCustomization.captureScreenTextBackgroundColor = backgroundColor;
        currentCustomization.idScanCustomization.captureScreenTextBackgroundBorderColor = primaryColor;
        currentCustomization.idScanCustomization.captureScreenTextBackgroundBorderWidth = "2px";
        currentCustomization.idScanCustomization.captureScreenTextBackgroundCornerRadius = "5px";
        currentCustomization.idScanCustomization.reviewScreenTextBackgroundColor = backgroundColor;
        currentCustomization.idScanCustomization.reviewScreenTextBackgroundBorderColor = primaryColor;
        currentCustomization.idScanCustomization.reviewScreenTextBackgroundBorderWidth = "2px";
        currentCustomization.idScanCustomization.reviewScreenTextBackgroundBorderCornerRadius = "5px";
        currentCustomization.idScanCustomization.captureScreenBackgroundColor = backgroundColor;
        currentCustomization.idScanCustomization.captureFrameStrokeColor = primaryColor;
        currentCustomization.idScanCustomization.captureFrameStrokeWidth = "2px";
        currentCustomization.idScanCustomization.captureFrameCornerRadius = "12px";

        // Aditional Review OCR
        currentCustomization.idScanCustomization.additionalReviewScreenBackgroundColors = backgroundColor;
        currentCustomization.idScanCustomization.additionalReviewScreenForegroundColor = primaryColor;
        currentCustomization.idScanCustomization.additionalReviewScreenImage = 0;
        currentCustomization.idScanCustomization.additionalReviewScreenAnimation = additionalReviewSVG;
        currentCustomization.idScanCustomization.additionalReviewScreenStaticAnimation = 0;

        // OCR Confirmation Screen Customization
        currentCustomization.ocrConfirmationCustomization.backgroundColors = backgroundColor;
        currentCustomization.ocrConfirmationCustomization.mainHeaderDividerLineColor = secondaryColor;
        currentCustomization.ocrConfirmationCustomization.mainHeaderDividerLineWidth = "2px";
        currentCustomization.ocrConfirmationCustomization.mainHeaderFont = font;
        currentCustomization.ocrConfirmationCustomization.sectionHeaderFont = font;
        currentCustomization.ocrConfirmationCustomization.fieldLabelFont = font;
        currentCustomization.ocrConfirmationCustomization.fieldValueFont = font;
        currentCustomization.ocrConfirmationCustomization.inputFieldFont = font;
        currentCustomization.ocrConfirmationCustomization.inputFieldPlaceholderFont = font;
        currentCustomization.ocrConfirmationCustomization.mainHeaderTextColor = secondaryColor;
        currentCustomization.ocrConfirmationCustomization.sectionHeaderTextColor = primaryColor;
        currentCustomization.ocrConfirmationCustomization.fieldLabelTextColor = primaryColor;
        currentCustomization.ocrConfirmationCustomization.fieldValueTextColor = primaryColor;
        currentCustomization.ocrConfirmationCustomization.inputFieldTextColor = primaryColor;
        currentCustomization.ocrConfirmationCustomization.inputFieldPlaceholderTextColor = "white"
        currentCustomization.ocrConfirmationCustomization.inputFieldBackgroundColor = "transparent";
        currentCustomization.ocrConfirmationCustomization.inputFieldBorderColor = secondaryColor;
        currentCustomization.ocrConfirmationCustomization.inputFieldBorderWidth = "2px";
        currentCustomization.ocrConfirmationCustomization.inputFieldCornerRadius = "0px";
        currentCustomization.ocrConfirmationCustomization.showInputFieldBottomBorderOnly = true;
        currentCustomization.ocrConfirmationCustomization.buttonFont = font;
        currentCustomization.ocrConfirmationCustomization.buttonTextNormalColor = backgroundColor;
        currentCustomization.ocrConfirmationCustomization.buttonBackgroundNormalColor = primaryColor;
        currentCustomization.ocrConfirmationCustomization.buttonTextHighlightColor = backgroundColor;
        currentCustomization.ocrConfirmationCustomization.buttonBackgroundHighlightColor = secondaryColor;
        currentCustomization.ocrConfirmationCustomization.buttonTextDisabledColor = backgroundColor;
        currentCustomization.ocrConfirmationCustomization.buttonBackgroundDisabledColor = primaryColor;
        currentCustomization.ocrConfirmationCustomization.buttonBorderColor = "transparent";
        currentCustomization.ocrConfirmationCustomization.buttonBorderWidth = "0px";
        currentCustomization.ocrConfirmationCustomization.buttonCornerRadius = "20px";
        // Scroll indicator
        currentCustomization.ocrConfirmationCustomization.customScrollIndicatorAnimation = null;
        currentCustomization.ocrConfirmationCustomization.scrollIndicatorBackgroundNormalColor = primaryColor;
        currentCustomization.ocrConfirmationCustomization.scrollIndicatorBackgroundHighlightColor = secondaryColor;
        currentCustomization.ocrConfirmationCustomization.scrollIndicatorForegroundNormalColor = backgroundColor;
        currentCustomization.ocrConfirmationCustomization.scrollIndicatorForegroundHighlightColor = backgroundColor;
        currentCustomization.ocrConfirmationCustomization.scrollIndicatorBorderColor = "transparent";
        currentCustomization.ocrConfirmationCustomization.scrollIndicatorBorderWidth = "0px";
        currentCustomization.ocrConfirmationCustomization.scrollIndicatorCornerRadius = "-1";
        currentCustomization.ocrConfirmationCustomization.scrollIndicatorFont = font;
        //currentCustomization.ocrConfirmationCustomization.scrollIndicatorShadow = shadow;
        currentCustomization.ocrConfirmationCustomization.enableScrollIndicator = true;
        currentCustomization.ocrConfirmationCustomization.enableScrollIndicatorTextAnimation = false;
        currentCustomization.ocrConfirmationCustomization.enableFixedConfirmButton = false;
        currentCustomization.ocrConfirmationCustomization.showScrollIndicatorImage = true;
        // Result Screen Customization
        currentCustomization.resultScreenCustomization.backgroundColors = backgroundColor;
        currentCustomization.resultScreenCustomization.foregroundColor = primaryColor;
        currentCustomization.resultScreenCustomization.messageFont = font;
        currentCustomization.resultScreenCustomization.activityIndicatorColor = primaryColor;
        currentCustomization.resultScreenCustomization.customActivityIndicatorImage = themeResourceDirectory + "karalundi/activity_indicator_faded_orange.png";
        currentCustomization.resultScreenCustomization.customActivityIndicatorRotationInterval = "0.8s";
        //currentCustomization.resultScreenCustomization.customActivityIndicatorAnimation = activityIndicatorSVG;
        currentCustomization.resultScreenCustomization.resultAnimationBackgroundColor = secondaryColor;
        currentCustomization.resultScreenCustomization.resultAnimationForegroundColor = backgroundColor;
        currentCustomization.resultScreenCustomization.resultAnimationSuccessBackgroundImage = "";
        currentCustomization.resultScreenCustomization.resultAnimationUnsuccessBackgroundImage = "";
        //currentCustomization.resultScreenCustomization.customResultAnimationSuccess = successResultAnimationSVG;
        //currentCustomization.resultScreenCustomization.customResultAnimationUnsuccess = unsuccessResultAnimationSVG;
        currentCustomization.resultScreenCustomization.showUploadProgressBar = true;
        currentCustomization.resultScreenCustomization.uploadProgressTrackColor = primaryColor;
        currentCustomization.resultScreenCustomization.uploadProgressFillColor = secondaryColor;
        currentCustomization.resultScreenCustomization.animationRelativeScale = 1.0;
        // Feedback Customization
        currentCustomization.feedbackCustomization.backgroundColor = secondaryColor;
        currentCustomization.feedbackCustomization.textColor = backgroundColor;
        currentCustomization.feedbackCustomization.textFont = font;
        currentCustomization.feedbackCustomization.cornerRadius = "5px";
        currentCustomization.feedbackCustomization.shadow = "0px 3px 10px black";
        // Frame Customization
        currentCustomization.frameCustomization.backgroundColor = backgroundColor;
        currentCustomization.frameCustomization.borderColor = primaryColor;
        currentCustomization.frameCustomization.borderWidth = "0px";
        currentCustomization.frameCustomization.borderCornerRadius = "0px";
        currentCustomization.frameCustomization.shadow = "none";
        // Oval Customization
        currentCustomization.ovalCustomization.strokeColor = primaryColor;
        currentCustomization.ovalCustomization.progressColor1 = primaryColor;
        currentCustomization.ovalCustomization.progressColor2 = secondaryColor;
        // Cancel Button Customization
        currentCustomization.cancelButtonCustomization.customImage = themeResourceDirectory + "karalundi/single_chevron_left_orange.png";
        currentCustomization.cancelButtonCustomization.location = FaceTecSDK.FaceTecCancelButtonLocation.Custom;
        currentCustomization.cancelButtonCustomization.setCustomLocation(20, 20, 20, 20);
        // Guidance Customization -- Text Style Overrides
        // Ready Screen Header
        currentCustomization.guidanceCustomization.readyScreenHeaderFont = font;
        currentCustomization.guidanceCustomization.readyScreenHeaderTextColor = primaryColor;
        // Ready Screen Subtext
        currentCustomization.guidanceCustomization.readyScreenSubtextFont = font;
        currentCustomization.guidanceCustomization.readyScreenSubtextTextColor = primaryColor;
        // Retry Screen Header
        currentCustomization.guidanceCustomization.retryScreenHeaderFont = font;
        currentCustomization.guidanceCustomization.retryScreenHeaderTextColor = primaryColor;
        // Retry Screen Subtext
        currentCustomization.guidanceCustomization.retryScreenSubtextFont = font;
        currentCustomization.guidanceCustomization.retryScreenSubtextTextColor = primaryColor;
        // Security Watermark Customization
        currentCustomization.securityWatermarkCustomization.setSecurityWatermarkImage(FaceTecSDK.FaceTecSecurityWatermarkImage.FaceTec);
        return currentCustomization;
    }
    function getLowLightCustomizationForTheme() {
        var currentLowLightCustomization = getCustomizationForTheme();
            var primaryColor = "#f4aa27"; //Naranja 1
            var secondaryColor = "#eec273"; // Naranja 2
            var backgroundColor = "#fff"; // white

            var font = "Futura,'Trebuchet MS',Arial,sans-serif";
            var additionalReviewSVG = document.createElementNS("http://www.w3.org/2000/svg", "svg");
            additionalReviewSVG.setAttribute("viewBox", "0 0 122.93 79.21");
            additionalReviewSVG.innerHTML = "<defs><style>.d{fill:#ccc;}.e{stroke:#cbcbcb;stroke-width:4px;}.e,.f{fill:none;stroke-miterlimit:10;}.f{stroke:#ccc;}.d1{stroke-linecap:round;stroke-linejoin:round;}.d1,.e1{fill:none;stroke:#0080ba;stroke-width:5px;}.e1{stroke-miterlimit:10;}</style></defs><g id='a'/><g id='b'><g id='c'><g><rect class='e' x='24.05' y='-19.75' width='74.82' height='118.7' rx='6.7' ry='6.7' transform='translate(100.84 -22.01) rotate(89.79)'/><g><g><rect class='d' x='50.05' y='58.39' width='20.25' height='3.4' rx='.88' ry='.88' transform='translate(-.22 .22) rotate(-.21)'/><rect class='d' x='99.86' y='38.43' width='11.96' height='3.4' rx='.88' ry='.88' transform='translate(-.15 .39) rotate(-.21)'/><rect class='d' x='99.82' y='28.53' width='11.96' height='3.4' rx='.88' ry='.88' transform='translate(-.11 .39) rotate(-.21)'/><rect class='d' x='50.01' y='48.46' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.18 .25) rotate(-.21)'/><rect class='d' x='49.98' y='38.57' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.15 .25) rotate(-.21)'/><rect class='d' x='49.94' y='28.67' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.11 .25) rotate(-.21)'/></g><path class='d' d='M25.13,31.3c-7.76,.03-14.06,6.37-14.02,14.13,.04,7.75,6.35,14.03,14.09,14.02,7.74-.01,14.08-6.29,14.06-14.12-.03-7.78-6.36-14.05-14.12-14.02Zm6.85,25.16c-1.29,.79-2.68,1.34-4.16,1.65-.86,.18-1.73,.27-2.62,.27-2.43,0-4.68-.63-6.77-1.87-.17-.1-.23-.19-.17-.4,.34-1.2,.69-2.41,1.15-3.57,.54-1.37,1.15-2.71,2.03-3.9,.28-.38,.57-.74,.85-1.12,.08-.1,.14-.11,.26-.05,1.72,.84,3.45,.82,5.17,0,.15-.07,.22-.05,.32,.07,1.02,1.31,1.9,2.7,2.54,4.25,.6,1.45,1.08,2.93,1.49,4.43,.04,.14-.01,.18-.11,.24Zm-10.15-10.85c-2.33-2.19-2.4-6.13-.16-8.41,2.15-2.18,5.55-1.97,7.41,.48,.8,1.05,1.22,2.29,1.23,3.63-.03,1.79-.64,3.33-2.02,4.51-1.92,1.63-4.61,1.54-6.46-.2Zm11.24,10.1c-.11-.37-.22-.74-.34-1.11-.32-1.04-.68-2.06-1.1-3.06-.56-1.35-1.28-2.61-2.12-3.81-.21-.3-.46-.57-.7-.84-.09-.1-.07-.14,.02-.23,1.72-1.47,2.54-3.35,2.45-5.59-.1-2.49-1.19-4.47-3.4-5.72-2.35-1.33-5.32-.77-7.18,1.3-2.53,2.82-2.28,7.4,.53,9.84q.3,.26,.05,.57c-.65,.82-1.22,1.69-1.75,2.59-.26,.43-.42,.91-.63,1.37-.65,1.46-1.11,2.97-1.56,4.5-.02,.06-.04,.13-.06,.2-3.65-2.67-6.15-7.83-4.8-13.47,1.36-5.67,6.49-9.79,12.36-9.92,6.04-.13,11.15,3.8,12.79,9.27,1.7,5.68-.66,11.2-4.59,14.1Z'/></g><line class='f' x1='7.74' y1='21.19' x2='115.19' y2='21.37'/><rect class='d' x='7.74' y='10.7' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.05 .1) rotate(-.21)'/></g></g></g><g id='a1'/><g id='b1' transform='translate(0 19.5)'><g id='c1'><g><circle class='e1' cx='25.71' cy='25.71' r='23.21'/><line class='d1' x1='42.42' y1='43.28' x2='52.55' y2='53.41'/><animateTransform attributeName='transform' attributeType='XML' dur='1.5s' type='translate' begin='indefinite' from='0 0' to='64.5 0' calcmode='spline' keysplines='0.42,0,0.58,1' keyTimes='0;1' fill='freeze'></animateTransform></g></g></g>";
            // Overlay Customization
            currentLowLightCustomization.overlayCustomization.brandingImage = themeResourceDirectory + "karalundi/karalundi_transp.png";
            // Guidance Customization
            currentLowLightCustomization.guidanceCustomization.foregroundColor = primaryColor;
            currentLowLightCustomization.guidanceCustomization.backgroundColors = primaryColor;
            currentLowLightCustomization.guidanceCustomization.buttonTextNormalColor = "white";
            currentLowLightCustomization.guidanceCustomization.buttonBackgroundNormalColor = primaryColor;
            currentLowLightCustomization.guidanceCustomization.buttonTextHighlightColor = "white";
            currentLowLightCustomization.guidanceCustomization.buttonBackgroundHighlightColor = secondaryColor;
            currentLowLightCustomization.guidanceCustomization.buttonTextDisabledColor = "white";
            currentLowLightCustomization.guidanceCustomization.buttonBackgroundDisabledColor = secondaryColor;
            currentLowLightCustomization.guidanceCustomization.buttonBorderColor = "transparent";
            currentLowLightCustomization.guidanceCustomization.readyScreenOvalFillColor = "transparent";
            currentLowLightCustomization.guidanceCustomization.readyScreenTextBackgroundColor = "white";
            currentLowLightCustomization.guidanceCustomization.retryScreenImageBorderColor = primaryColor;
            currentLowLightCustomization.guidanceCustomization.retryScreenOvalStrokeColor = primaryColor;
            currentLowLightCustomization.guidanceCustomization.retryScreenSlideshowImages = [];
            // ID Scan Customization
            currentLowLightCustomization.idScanCustomization.selectionScreenDocumentImage = themeResourceDirectory + "karalundi/document_off_orange.png";
            currentLowLightCustomization.idScanCustomization.selectionScreenBrandingImage = "";
            currentLowLightCustomization.idScanCustomization.captureScreenForegroundColor = primaryColor;
            currentLowLightCustomization.idScanCustomization.reviewScreenForegroundColor = primaryColor;
            currentLowLightCustomization.idScanCustomization.selectionScreenForegroundColor = primaryColor;
            currentLowLightCustomization.idScanCustomization.captureScreenFocusMessage = primaryColor;
            currentLowLightCustomization.idScanCustomization.captureScreenFocusMessageTextColor = primaryColor;           
            currentLowLightCustomization.idScanCustomization.buttonTextNormalColor = "white";
            currentLowLightCustomization.idScanCustomization.buttonBackgroundNormalColor = primaryColor;
            currentLowLightCustomization.idScanCustomization.buttonTextHighlightColor = "white";
            currentLowLightCustomization.idScanCustomization.buttonBackgroundHighlightColor = secondaryColor;
            currentLowLightCustomization.idScanCustomization.buttonTextDisabledColor = "white";
            currentLowLightCustomization.idScanCustomization.buttonBackgroundDisabledColor = secondaryColor;
            currentLowLightCustomization.idScanCustomization.buttonBorderColor = "transparent";
            currentLowLightCustomization.idScanCustomization.captureScreenTextBackgroundColor = backgroundColor;
            currentLowLightCustomization.idScanCustomization.captureScreenTextBackgroundBorderColor = "transparent";
            currentLowLightCustomization.idScanCustomization.reviewScreenTextBackgroundColor = backgroundColor;
            currentLowLightCustomization.idScanCustomization.reviewScreenTextBackgroundBorderColor = "transparent";
            currentLowLightCustomization.idScanCustomization.captureFrameStrokeColor = primaryColor;
            // Aditional Review OCR
            currentLowLightCustomization.idScanCustomization.additionalReviewScreenBackgroundColors = backgroundColor;
            currentLowLightCustomization.idScanCustomization.additionalReviewScreenForegroundColor = primaryColor;
            currentLowLightCustomization.idScanCustomization.additionalReviewScreenImage = 0;
            currentLowLightCustomization.idScanCustomization.additionalReviewScreenAnimation = additionalReviewSVG;
            currentLowLightCustomization.idScanCustomization.additionalReviewScreenStaticAnimation = 0;
            // OCR Confirmation Screen Customization
            currentLowLightCustomization.ocrConfirmationCustomization.backgroundColors = backgroundColor;
            currentLowLightCustomization.ocrConfirmationCustomization.mainHeaderDividerLineColor = secondaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.mainHeaderDividerLineWidth = "2px";
            currentLowLightCustomization.ocrConfirmationCustomization.mainHeaderFont = font;
            currentLowLightCustomization.ocrConfirmationCustomization.sectionHeaderFont = font;
            currentLowLightCustomization.ocrConfirmationCustomization.fieldLabelFont = font;
            currentLowLightCustomization.ocrConfirmationCustomization.fieldValueFont = font;
            currentLowLightCustomization.ocrConfirmationCustomization.inputFieldFont = font;
            currentLowLightCustomization.ocrConfirmationCustomization.inputFieldPlaceholderFont = font;
            currentLowLightCustomization.ocrConfirmationCustomization.mainHeaderTextColor = secondaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.sectionHeaderTextColor = primaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.fieldLabelTextColor = primaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.fieldValueTextColor = primaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.inputFieldTextColor = primaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.inputFieldPlaceholderTextColor = "white"
            currentLowLightCustomization.ocrConfirmationCustomization.inputFieldBackgroundColor = "transparent";
            currentLowLightCustomization.ocrConfirmationCustomization.inputFieldBorderColor = secondaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.inputFieldBorderWidth = "2px";
            currentLowLightCustomization.ocrConfirmationCustomization.inputFieldCornerRadius = "0px";
            currentLowLightCustomization.ocrConfirmationCustomization.showInputFieldBottomBorderOnly = true;
            currentLowLightCustomization.ocrConfirmationCustomization.buttonFont = font;
            currentLowLightCustomization.ocrConfirmationCustomization.buttonTextNormalColor = backgroundColor;
            currentLowLightCustomization.ocrConfirmationCustomization.buttonBackgroundNormalColor = primaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.buttonTextHighlightColor = backgroundColor;
            currentLowLightCustomization.ocrConfirmationCustomization.buttonBackgroundHighlightColor = secondaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.buttonTextDisabledColor = backgroundColor;
            currentLowLightCustomization.ocrConfirmationCustomization.buttonBackgroundDisabledColor = primaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.buttonBorderColor = "transparent";
            currentLowLightCustomization.ocrConfirmationCustomization.buttonBorderWidth = "0px";
            currentLowLightCustomization.ocrConfirmationCustomization.buttonCornerRadius = "20px";
            // Scroll indicator
            currentLowLightCustomization.ocrConfirmationCustomization.customScrollIndicatorAnimation = null;
            currentLowLightCustomization.ocrConfirmationCustomization.scrollIndicatorBackgroundNormalColor = primaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.scrollIndicatorBackgroundHighlightColor = secondaryColor;
            currentLowLightCustomization.ocrConfirmationCustomization.scrollIndicatorForegroundNormalColor = backgroundColor;
            currentLowLightCustomization.ocrConfirmationCustomization.scrollIndicatorForegroundHighlightColor = backgroundColor;
            currentLowLightCustomization.ocrConfirmationCustomization.scrollIndicatorBorderColor = "transparent";
            currentLowLightCustomization.ocrConfirmationCustomization.scrollIndicatorBorderWidth = "0px";
            currentLowLightCustomization.ocrConfirmationCustomization.scrollIndicatorCornerRadius = "-1";
            currentLowLightCustomization.ocrConfirmationCustomization.scrollIndicatorFont = font;
            //currentLowLightCustomization.ocrConfirmationCustomization.scrollIndicatorShadow = shadow;
            currentLowLightCustomization.ocrConfirmationCustomization.enableScrollIndicator = true;
            currentLowLightCustomization.ocrConfirmationCustomization.enableScrollIndicatorTextAnimation = false;
            currentLowLightCustomization.ocrConfirmationCustomization.enableFixedConfirmButton = false;
            currentLowLightCustomization.ocrConfirmationCustomization.showScrollIndicatorImage = true;
            // Result Screen Customization
            currentLowLightCustomization.resultScreenCustomization.foregroundColor = primaryColor;
            currentLowLightCustomization.resultScreenCustomization.activityIndicatorColor = primaryColor;
            currentLowLightCustomization.resultScreenCustomization.customActivityIndicatorImage = themeResourceDirectory + "karalundi/activity_indicator_faded_orange.png";
            currentLowLightCustomization.resultScreenCustomization.customActivityIndicatorAnimation = null;
            currentLowLightCustomization.resultScreenCustomization.resultAnimationBackgroundColor = primaryColor;
            currentLowLightCustomization.resultScreenCustomization.resultAnimationForegroundColor = "white";
            currentLowLightCustomization.resultScreenCustomization.resultAnimationSuccessBackgroundImage = "";
            currentLowLightCustomization.resultScreenCustomization.resultAnimationUnsuccessBackgroundImage = "";
            currentLowLightCustomization.resultScreenCustomization.customResultAnimationSuccess = null;
            currentLowLightCustomization.resultScreenCustomization.customResultAnimationUnsuccess = null;
            currentLowLightCustomization.resultScreenCustomization.uploadProgressTrackColor = primaryColor;
            currentLowLightCustomization.resultScreenCustomization.uploadProgressFillColor = primaryColor;
            // Feedback Customization
            currentLowLightCustomization.feedbackCustomization.backgroundColor = backgroundColor;
            currentLowLightCustomization.feedbackCustomization.textColor = "black";
            // Frame Customization
            currentLowLightCustomization.frameCustomization.borderColor = backgroundColor;
            // Oval Customization
            currentLowLightCustomization.ovalCustomization.strokeColor = primaryColor;
            currentLowLightCustomization.ovalCustomization.progressColor1 = primaryColor;
            currentLowLightCustomization.ovalCustomization.progressColor2 = secondaryColor;
            // Cancel Button Customization
            currentLowLightCustomization.cancelButtonCustomization.customImage = themeResourceDirectory + "karalundi/single_chevron_left_orange.png";
            // Guidance Customization -- Text Style Overrides
            // Ready Screen Header
            currentLowLightCustomization.guidanceCustomization.readyScreenHeaderTextColor = primaryColor;
            // Ready Screen Subtext
            currentLowLightCustomization.guidanceCustomization.readyScreenSubtextTextColor = primaryColor;
            // Retry Screen Header
            currentLowLightCustomization.guidanceCustomization.retryScreenHeaderTextColor = primaryColor;
            // Retry Screen Subtext
            currentLowLightCustomization.guidanceCustomization.retryScreenSubtextTextColor = primaryColor;

            //overlay
            currentLowLightCustomization.overlayCustomization.backgroundColor = backgroundColor;


            return currentLowLightCustomization;
        }
        function getDynamicDimmingCustomizationForTheme() {
            var currentDynamicDimmingCustomization = getCustomizationForTheme();
            var primaryColor = "#f4aa27"; //Naranja 1
            var secondaryColor = "#eec273"; // Naranja 2
            var backgroundColor = "black";
            var font = "Futura,'Trebuchet MS',Arial,sans-serif";
            var activityIndicatorSVG = document.createElementNS("http://www.w3.org/2000/svg", "svg");
            activityIndicatorSVG.setAttribute("viewBox", "0 0 52 52");
            activityIndicatorSVG.classList.add("pseudo-fullscreen-activity-indicator-svg__offwhite");
            activityIndicatorSVG.innerHTML = "<circle class='path' cx='26' cy='26' r='22'></circle>";
            var successResultAnimationSVG = document.createElementNS("http://www.w3.org/2000/svg", "svg");
            successResultAnimationSVG.setAttribute("viewBox", "0 0 52 52");
            successResultAnimationSVG.classList.add("pseudo-fullscreen-success-svg__offwhite");
            successResultAnimationSVG.innerHTML = "<circle class='circlePath' cx='26' cy='26' r='22'></circle><path class='checkmarkPath' d='M14.1 27.2l7.1 7.2 16.7-16.8'></path>";
            var unsuccessResultAnimationSVG = document.createElementNS("http://www.w3.org/2000/svg", "svg");
            unsuccessResultAnimationSVG.setAttribute("viewBox", "0 0 52 52");
            unsuccessResultAnimationSVG.classList.add("pseudo-fullscreen-unsuccess-svg__offwhite");
            unsuccessResultAnimationSVG.innerHTML = "<circle class='circlePath' cx='26' cy='26' r='22'></circle><line class='crossPath1' x1='18' y1='18' x2='34' y2='34'></line><line class='crossPath2' x1='34' y1='18' x2='18' y2='34'></line>";
            var additionalReviewSVG = document.createElementNS("http://www.w3.org/2000/svg", "svg");
            additionalReviewSVG.setAttribute("viewBox", "0 0 122.93 79.21");
            additionalReviewSVG.innerHTML = "<defs><style>.d{fill:#ccc;}.e{stroke:#cbcbcb;stroke-width:4px;}.e,.f{fill:none;stroke-miterlimit:10;}.f{stroke:#ccc;}.d1{stroke-linecap:round;stroke-linejoin:round;}.d1,.e1{fill:none;stroke:#0080ba;stroke-width:5px;}.e1{stroke-miterlimit:10;}</style></defs><g id='a'/><g id='b'><g id='c'><g><rect class='e' x='24.05' y='-19.75' width='74.82' height='118.7' rx='6.7' ry='6.7' transform='translate(100.84 -22.01) rotate(89.79)'/><g><g><rect class='d' x='50.05' y='58.39' width='20.25' height='3.4' rx='.88' ry='.88' transform='translate(-.22 .22) rotate(-.21)'/><rect class='d' x='99.86' y='38.43' width='11.96' height='3.4' rx='.88' ry='.88' transform='translate(-.15 .39) rotate(-.21)'/><rect class='d' x='99.82' y='28.53' width='11.96' height='3.4' rx='.88' ry='.88' transform='translate(-.11 .39) rotate(-.21)'/><rect class='d' x='50.01' y='48.46' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.18 .25) rotate(-.21)'/><rect class='d' x='49.98' y='38.57' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.15 .25) rotate(-.21)'/><rect class='d' x='49.94' y='28.67' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.11 .25) rotate(-.21)'/></g><path class='d' d='M25.13,31.3c-7.76,.03-14.06,6.37-14.02,14.13,.04,7.75,6.35,14.03,14.09,14.02,7.74-.01,14.08-6.29,14.06-14.12-.03-7.78-6.36-14.05-14.12-14.02Zm6.85,25.16c-1.29,.79-2.68,1.34-4.16,1.65-.86,.18-1.73,.27-2.62,.27-2.43,0-4.68-.63-6.77-1.87-.17-.1-.23-.19-.17-.4,.34-1.2,.69-2.41,1.15-3.57,.54-1.37,1.15-2.71,2.03-3.9,.28-.38,.57-.74,.85-1.12,.08-.1,.14-.11,.26-.05,1.72,.84,3.45,.82,5.17,0,.15-.07,.22-.05,.32,.07,1.02,1.31,1.9,2.7,2.54,4.25,.6,1.45,1.08,2.93,1.49,4.43,.04,.14-.01,.18-.11,.24Zm-10.15-10.85c-2.33-2.19-2.4-6.13-.16-8.41,2.15-2.18,5.55-1.97,7.41,.48,.8,1.05,1.22,2.29,1.23,3.63-.03,1.79-.64,3.33-2.02,4.51-1.92,1.63-4.61,1.54-6.46-.2Zm11.24,10.1c-.11-.37-.22-.74-.34-1.11-.32-1.04-.68-2.06-1.1-3.06-.56-1.35-1.28-2.61-2.12-3.81-.21-.3-.46-.57-.7-.84-.09-.1-.07-.14,.02-.23,1.72-1.47,2.54-3.35,2.45-5.59-.1-2.49-1.19-4.47-3.4-5.72-2.35-1.33-5.32-.77-7.18,1.3-2.53,2.82-2.28,7.4,.53,9.84q.3,.26,.05,.57c-.65,.82-1.22,1.69-1.75,2.59-.26,.43-.42,.91-.63,1.37-.65,1.46-1.11,2.97-1.56,4.5-.02,.06-.04,.13-.06,.2-3.65-2.67-6.15-7.83-4.8-13.47,1.36-5.67,6.49-9.79,12.36-9.92,6.04-.13,11.15,3.8,12.79,9.27,1.7,5.68-.66,11.2-4.59,14.1Z'/></g><line class='f' x1='7.74' y1='21.19' x2='115.19' y2='21.37'/><rect class='d' x='7.74' y='10.7' width='37.84' height='3.4' rx='.88' ry='.88' transform='translate(-.05 .1) rotate(-.21)'/></g></g></g><g id='a1'/><g id='b1' transform='translate(0 19.5)'><g id='c1'><g><circle class='e1' cx='25.71' cy='25.71' r='23.21'/><line class='d1' x1='42.42' y1='43.28' x2='52.55' y2='53.41'/><animateTransform attributeName='transform' attributeType='XML' dur='1.5s' type='translate' begin='indefinite' from='0 0' to='64.5 0' calcmode='spline' keysplines='0.42,0,0.58,1' keyTimes='0;1' fill='freeze'></animateTransform></g></g></g>";
            // Overlay Customization
            currentDynamicDimmingCustomization.overlayCustomization.brandingImage = "";
            // Guidance Customization
            currentDynamicDimmingCustomization.guidanceCustomization.foregroundColor = backgroundColor;
            currentDynamicDimmingCustomization.guidanceCustomization.backgroundColors = backgroundColor;
            currentDynamicDimmingCustomization.guidanceCustomization.buttonTextNormalColor = backgroundColor;
            currentDynamicDimmingCustomization.guidanceCustomization.buttonBackgroundNormalColor = primaryColor;
            currentDynamicDimmingCustomization.guidanceCustomization.buttonTextHighlightColor = backgroundColor;
            currentDynamicDimmingCustomization.guidanceCustomization.buttonBackgroundHighlightColor = secondaryColor;
            currentDynamicDimmingCustomization.guidanceCustomization.buttonTextDisabledColor = backgroundColor;
            currentDynamicDimmingCustomization.guidanceCustomization.buttonBackgroundDisabledColor = secondaryColor;
            currentDynamicDimmingCustomization.guidanceCustomization.buttonBorderColor = "transparent";
            currentDynamicDimmingCustomization.guidanceCustomization.readyScreenOvalFillColor = "transparent";
            currentDynamicDimmingCustomization.guidanceCustomization.readyScreenTextBackgroundColor = backgroundColor;
            currentDynamicDimmingCustomization.guidanceCustomization.retryScreenImageBorderColor = primaryColor;
            currentDynamicDimmingCustomization.guidanceCustomization.retryScreenOvalStrokeColor = primaryColor;
            //currentDynamicDimmingCustomization.guidanceCustomization.retryScreenSlideshowImages = retryScreenSlideshowImages;
            currentDynamicDimmingCustomization.guidanceCustomization.cameraPermissionsScreenImage = themeResourceDirectory + "karalundi/camera_shutter_orange.png";
            // ID Scan Customization
            currentDynamicDimmingCustomization.idScanCustomization.selectionScreenDocumentImage = themeResourceDirectory + "karalundi/document_off_orange.png";
            currentDynamicDimmingCustomization.idScanCustomization.selectionScreenBrandingImage = "";
            currentDynamicDimmingCustomization.idScanCustomization.captureScreenForegroundColor = primaryColor;
            currentDynamicDimmingCustomization.idScanCustomization.captureScreenFocusMessageTextColor = backgroundColor;           
            currentDynamicDimmingCustomization.idScanCustomization.reviewScreenForegroundColor = primaryColor;
            currentDynamicDimmingCustomization.idScanCustomization.selectionScreenForegroundColor = primaryColor;
            currentDynamicDimmingCustomization.idScanCustomization.buttonTextNormalColor = backgroundColor;
            currentDynamicDimmingCustomization.idScanCustomization.buttonBackgroundNormalColor = primaryColor;
            currentDynamicDimmingCustomization.idScanCustomization.buttonTextHighlightColor = backgroundColor;
            currentDynamicDimmingCustomization.idScanCustomization.buttonBackgroundHighlightColor = secondaryColor;
            currentDynamicDimmingCustomization.idScanCustomization.buttonTextDisabledColor = backgroundColor;
            currentDynamicDimmingCustomization.idScanCustomization.buttonBackgroundDisabledColor = secondaryColor;
            currentDynamicDimmingCustomization.idScanCustomization.buttonBorderColor = "transparent";
            currentDynamicDimmingCustomization.idScanCustomization.captureScreenTextBackgroundColor = backgroundColor;
            currentDynamicDimmingCustomization.idScanCustomization.captureScreenTextBackgroundBorderColor = primaryColor;
            currentDynamicDimmingCustomization.idScanCustomization.reviewScreenTextBackgroundColor = backgroundColor;
            currentDynamicDimmingCustomization.idScanCustomization.reviewScreenTextBackgroundBorderColor = primaryColor;
            currentDynamicDimmingCustomization.idScanCustomization.captureFrameStrokeColor = primaryColor;
            // Aditional Review OCR
            currentDynamicDimmingCustomization.idScanCustomization.additionalReviewScreenBackgroundColors = backgroundColor;
            currentDynamicDimmingCustomization.idScanCustomization.additionalReviewScreenForegroundColor = primaryColor;
            currentDynamicDimmingCustomization.idScanCustomization.additionalReviewScreenImage = 0;
            currentDynamicDimmingCustomization.idScanCustomization.additionalReviewScreenAnimation = additionalReviewSVG;
            currentDynamicDimmingCustomization.idScanCustomization.additionalReviewScreenStaticAnimation = 0;
            // OCR Confirmation Screen Customization
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.mainHeaderDividerLineColor = secondaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.mainHeaderTextColor = secondaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.sectionHeaderTextColor = primaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.fieldLabelTextColor = primaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.fieldValueTextColor = primaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.inputFieldTextColor = primaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.inputFieldPlaceholderTextColor = "white";
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.inputFieldBackgroundColor = "transparent";
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.inputFieldBorderColor = secondaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.buttonTextNormalColor = backgroundColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.buttonBackgroundNormalColor = primaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.buttonTextHighlightColor = backgroundColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.buttonBackgroundHighlightColor = secondaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.buttonTextDisabledColor = backgroundColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.buttonBackgroundDisabledColor = secondaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.buttonBorderColor = "transparent";
            // Scroll indicator
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.customScrollIndicatorAnimation = null;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.scrollIndicatorBackgroundNormalColor = primaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.scrollIndicatorBackgroundHighlightColor = secondaryColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.scrollIndicatorForegroundNormalColor = backgroundColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.scrollIndicatorForegroundHighlightColor = backgroundColor;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.scrollIndicatorBorderColor = "transparent";
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.scrollIndicatorBorderWidth = "0px";
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.scrollIndicatorCornerRadius = "-1";
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.scrollIndicatorFont = font;
            //currentDynamicDimmingCustomization.ocrConfirmationCustomization.scrollIndicatorShadow = shadow;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.enableScrollIndicator = true;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.enableScrollIndicatorTextAnimation = false;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.enableFixedConfirmButton = false;
            currentDynamicDimmingCustomization.ocrConfirmationCustomization.showScrollIndicatorImage = true;
            // Result Screen Customization
            currentDynamicDimmingCustomization.resultScreenCustomization.foregroundColor = primaryColor;
            currentDynamicDimmingCustomization.resultScreenCustomization.backgroundColors = backgroundColor;
            currentDynamicDimmingCustomization.resultScreenCustomization.activityIndicatorColor = primaryColor;
            currentDynamicDimmingCustomization.resultScreenCustomization.customActivityIndicatorImage = themeResourceDirectory + "karalundi/activity_indicator_faded_orange.png";
            //currentDynamicDimmingCustomization.resultScreenCustomization.customActivityIndicatorAnimation = activityIndicatorSVG;
            currentDynamicDimmingCustomization.resultScreenCustomization.resultAnimationBackgroundColor = secondaryColor;
            currentDynamicDimmingCustomization.resultScreenCustomization.resultAnimationForegroundColor = backgroundColor;
            currentDynamicDimmingCustomization.resultScreenCustomization.resultAnimationSuccessBackgroundImage = "";
            currentDynamicDimmingCustomization.resultScreenCustomization.resultAnimationUnsuccessBackgroundImage = "";
            //currentDynamicDimmingCustomization.resultScreenCustomization.customResultAnimationSuccess = successResultAnimationSVG;
            //currentDynamicDimmingCustomization.resultScreenCustomization.customResultAnimationUnsuccess = unsuccessResultAnimationSVG;
            currentDynamicDimmingCustomization.resultScreenCustomization.showUploadProgressBar = true;
            currentDynamicDimmingCustomization.resultScreenCustomization.uploadProgressTrackColor = primaryColor;
            currentDynamicDimmingCustomization.resultScreenCustomization.uploadProgressFillColor = secondaryColor;
            currentDynamicDimmingCustomization.resultScreenCustomization.animationRelativeScale = 1.0;
            // Feedback Customization
            currentDynamicDimmingCustomization.feedbackCustomization.backgroundColor = secondaryColor;
            currentDynamicDimmingCustomization.feedbackCustomization.textColor = "black";
            currentDynamicDimmingCustomization.feedbackCustomization.shadow = "0px 3px 10px black";
            // Frame Customization
            currentDynamicDimmingCustomization.frameCustomization.borderColor = primaryColor;
            currentDynamicDimmingCustomization.frameCustomization.backgroundColor = backgroundColor;
            currentDynamicDimmingCustomization.frameCustomization.shadow = "none";
            // Oval Customization
            currentDynamicDimmingCustomization.ovalCustomization.strokeColor = primaryColor;
            currentDynamicDimmingCustomization.ovalCustomization.progressColor1 = primaryColor;
            currentDynamicDimmingCustomization.ovalCustomization.progressColor2 = secondaryColor;
            // Cancel Button Customization
            currentDynamicDimmingCustomization.cancelButtonCustomization.customImage = themeResourceDirectory + "karalundi/single_chevron_left_off_orange.png";
            // Guidance Customization -- Text Style Overrides
            // Ready Screen Header
            currentDynamicDimmingCustomization.guidanceCustomization.readyScreenHeaderTextColor = primaryColor;
            // Ready Screen Subtext
            currentDynamicDimmingCustomization.guidanceCustomization.readyScreenSubtextTextColor = primaryColor;
            // Retry Screen Header
            currentDynamicDimmingCustomization.guidanceCustomization.retryScreenHeaderTextColor = primaryColor;
            // Retry Screen Subtext
            currentDynamicDimmingCustomization.guidanceCustomization.retryScreenSubtextTextColor = primaryColor;

            //overlay
            currentDynamicDimmingCustomization.overlayCustomization.backgroundColor = backgroundColor;

            return currentDynamicDimmingCustomization;
        }
    return {
        onLivenessCheckPressed: onLivenessCheckPressed,
        onEnrollUserPressed: onEnrollUserPressed,
        onAuthenticate3d3dUserPressed: onAuthenticate3d3dUserPressed,
        onAuthenticate3d2dUserPressed: onAuthenticate3d2dUserPressed,
        onAuthenticate2d2dUserPressed: onAuthenticate2d2dUserPressed,
        onPhotoIDMatchPressed: onPhotoIDMatchPressed,
        onPhotoIDScanPressed: onPhotoIDScanPressed,
        onSearchUserPressed: onSearchUserPressed,
        onGetUserPressed: onGetUserPressed,
        onEnroll1NUserPressed: onEnroll1NUserPressed,
        onDeleteUserPressed: onDeleteUserPressed,
        onSelectImage1Pressed: onSelectImage1Pressed,
        onSelectImage2Pressed: onSelectImage2Pressed,
        onDesignShowcasePressed: onDesignShowcasePressed,
        onComplete: onComplete,
        getLatestEnrollmentIdentifier: getLatestEnrollmentIdentifier,
        clearLatestEnrollmentIdentifier: clearLatestEnrollmentIdentifier,
        onVocalGuidanceSettingsButtonPressed: onVocalGuidanceSettingsButtonPressed,
        onViewAuditTrailPressed: onViewAuditTrailPressed,
        latestSessionResult: latestSessionResult,
        latestIDScanResult: latestIDScanResult,
        latestServerResult: latestServerResult,
        getImage_1: getImage_1,
        getImage_2: getImage_2,
        getGroupName: getGroupName
    };
})();
